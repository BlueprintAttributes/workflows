name: Subtree split

on:
    workflow_call:
        inputs:
            # if plugin to build lives under a sub-directory in the repo
            org:
                default: "${{ github.repository_owner }}"
                type: string
            # Name of the Filter to pass down to Automation RunTests ...
            repo:
                default: "${{ github.repository_owner }}"
                type: string
            config_path:
              default: ".github/subtree-config.json"
              type: string

jobs:
    sync_commits:
        runs-on: ubuntu-latest
        name: Sync commits

        steps:
          - name: Dump Inputs context
            env:
              GITHUB_CONTEXT: ${{ toJson(inputs) }}
            run: echo "$GITHUB_CONTEXT"

          - uses: actions/checkout@v4
            with:
                persist-credentials: false
                fetch-depth: 0

          # Add a personal access token to the repository secrets. This will allow the splitter action to push the new commits
          - uses: frankdejonge/use-github-token@1.0.2
            with:
                authentication: "mklabs:${{ secrets.ACCESS_TOKEN }}"

          # Cache the splitsh executable to speedup future runs
          - name: Cache splitsh-lite
            uses: actions/cache@v2
            with:
                path: "./splitsh"
                key: "${{ runner.os }}-splitsh-v101"

          # Sync commits and tags for the configured subtree splits
          - name: subtree split
            uses: acrobat/subtree-splitter@v1.1.4
            with:
                config-path: .github/subtree-splitter-config.json # Reference the location where you saved your config file

    dump:
        runs-on: ubuntu-latest
        name: Debug
        if: false
        steps:
            - name: Run a one-line script
              run: echo Hello from Octo Organization
              
            - name: Dump Inputs context
              env:
                GITHUB_CONTEXT: ${{ toJson(inputs) }}
              run: echo "$GITHUB_CONTEXT"
            - name: Dump GitHub context
              env:
                GITHUB_CONTEXT: ${{ toJson(github) }}
              run: echo "$GITHUB_CONTEXT"
            - name: Dump job context
              env:
                JOB_CONTEXT: ${{ toJson(job) }}
              run: echo "$JOB_CONTEXT"
            - name: Dump steps context
              env:
                STEPS_CONTEXT: ${{ toJson(steps) }}
              run: echo "$STEPS_CONTEXT"
            - name: Dump runner context
              env:
                RUNNER_CONTEXT: ${{ toJson(runner) }}
              run: echo "$RUNNER_CONTEXT"
            - name: Dump strategy context
              env:
                STRATEGY_CONTEXT: ${{ toJson(strategy) }}
              run: echo "$STRATEGY_CONTEXT"
            - name: Dump matrix context
              env:
                MATRIX_CONTEXT: ${{ toJson(matrix) }}
              run: echo "$MATRIX_CONTEXT"
