# Adjusted from the brilliant Ivan Tustanivsky who developed this for Sentry
#
# Credits to https://github.com/outoftheboxplugins/BuildMachines

name: Compile Plugin

on:
  workflow_call:
    inputs:
      # Note: done with matrix config, ideally would be nice if input supports arrays
      # ue_version:
      #   default: "5.3"
      #   type: string

      # if plugin to build lives under a sub-directory in the repo
      plugin_path:
          default: ""
          type: string
      # Name of the Filter to pass down to Automation RunTests ...
      tests_suite:
          default: ""
          type: string

# Idea is to run the job in parallel in all three last engine versions, uncomment concurency group to only allow one at a time
# concurrency: 
#   group: linux-compile-${{ github.head_ref }}
#   cancel-in-progress: true 

jobs:
  linux-build-plugin:
    name: Compile (Linux) - ${{ matrix.unreal }}

    if: github.actor == 'mklabs'
    runs-on: [self-hosted, Windows]

    strategy:
      matrix:
        unreal: ['5.1', '5.2', '5.3']

    steps:
      - uses: actions/checkout@v4

      # the ue4 group in the docker container: gid=1000
      # Credits https://github.com/outoftheboxplugins/BuildMachines/blob/master/.github/workflows/compile-plugin.yml#L51
      - name: Run Docker container
        run: |
          echo ${{ secrets.DOCKER_TOKEN }} | docker login ghcr.io -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker run -td --name unreal-${{ matrix.unreal }} -v ${{ github.workspace }}:/workspace --workdir /workspace --user 1234:1000 --env PATH="/home/gh/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin" ghcr.io/epicgames/unreal-engine:dev-slim-${{ matrix.unreal }}

          # Add the user so it has a home directory (needed for the test run later on)
          docker exec --user root unreal-${{ matrix.unreal }} useradd -u 1234 -g 1000 --create-home gh

      - name: Installing UE CLI
        run: |
          docker exec unreal-${{ matrix.unreal }} pip3 install --upgrade pip
          docker exec unreal-${{ matrix.unreal }} pip3 install ue4cli
          docker exec unreal-${{ matrix.unreal }} ue4 setroot /home/ue4/UnrealEngine

      - name: Package plugin
        run: docker exec -w /workspace/${{ inputs.plugin_path }} unreal-${{ matrix.unreal }} ue4 package

      - name: Test plugin
        if: ${{ inputs.tests_suite != '' }}
        run: docker exec -w /workspace/${{ inputs.plugin_path }} unreal-${{ matrix.unreal }} ue4 package

      # Note: Would only work with main plugin and tests plugin separated, eg. ./Plugin and ./PluginTests
      # Would need to rework the worfklow or provide more input options for more flexibility
      - name: Setup TP_Blank template project to run tests within
        if: ${{ inputs.tests_suite != '' }}
        run: |
          npx -y shx cp -r "${{ secrets.WIN_UNREAL_ENGINE_ROOT }}UE_${{ matrix.unreal }}/Templates/TP_Blank" TP_Blank
          npx -y shx mkdir -p TP_Blank/Plugins
          npx -y shx cp -r ${{ inputs.plugin_path }}/dist TP_Blank/Plugins/${{ inputs.plugin_path }}
          npx -y shx cp -r ${{ inputs.plugin_path }}Tests TP_Blank/Plugins/${{ inputs.plugin_path }}Tests

      - name: ue4 build Development Editor TP_Blank
        if: ${{ inputs.tests_suite != '' }}
        run: docker exec -w /workspace/TP_Blank unreal-${{ matrix.unreal }} ue4 build Development Editor
        working-directory: ${{ github.workspace }}/TP_Blank

      - name: Get short SHA
        run: echo "SHORT_SHA=$("${{ github.sha }}".SubString(0, 8))" >> $env:GITHUB_ENV

      - name: Print short SHA
        run: echo "Short SHA is ${{ env.SHORT_SHA }}"

      # Note: Got "Refusing to run with the root privileges." error when running the test suite
      # Trying with creating 1234 "gh" user
      - name: Run Tests (editor mode, no -game)
        if: ${{ inputs.tests_suite != '' }}
        run: docker exec -w /workspace/TP_Blank unreal-${{ matrix.unreal }} ue4 editor "${{ github.workspace }}\TP_Blank\TP_Blank.uproject" -ExecCmds="Automation RunTests ${{ inputs.tests_suite }};quit" -unattended -nopause -buildmachine -stdout -fullstdoutlogoutput -forcelogflush -nosplash -nullrhi -ReportOutputPath="${{ github.workspace }}\TestReports\TestReports-${{ matrix.unreal }}-Linux-${{ env.SHORT_SHA }}"
        working-directory: ${{ github.workspace }}/TP_Blank

      - name: Setup test report index.html (see https://gist.github.com/mklabs/98a3badabcdef902618e0a59a935b597)
        if: always() && ${{ inputs.tests_suite != '' }}
        run: |
          Invoke-WebRequest -Uri https://gist.githubusercontent.com/mklabs/98a3badabcdef902618e0a59a935b597/raw/2596dfff2f4c9aa40d9e361af7a6d495ccddae94/index.html -OutFile index.html
          echo "console.log('const json = ' + JSON.stringify(require('./index.json'), null, 4) + ';')" | node - > json.js
        working-directory: ${{ github.workspace }}\TestReports\TestReports-${{ matrix.unreal }}-Linux-${{ env.SHORT_SHA }}

      - name: Upload test artifacts
        if: always() && ${{ inputs.tests_suite != '' }}
        uses: actions/upload-artifact@v3
        with:
          name: TestReports-${{ matrix.unreal }}-Linux-${{ env.SHORT_SHA }}
          path: ${{ github.workspace }}/TestReports/TestReports-${{ matrix.unreal }}-Linux-${{ env.SHORT_SHA }}/*

      - name: rm container
        if: always()
        run: |
          docker stop unreal-${{ matrix.unreal }}
          docker rm unreal-${{ matrix.unreal }}